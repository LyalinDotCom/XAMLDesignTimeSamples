<Window x:Class="WpfdtdSamples.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfdtdSamples"
        xmlns:models="clr-namespace:WpfdtdSamples.Models"
        xmlns:helper="clr-namespace:WpfdtdSamples.Helpers"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:ctrl="clr-namespace:WpfdtdSamples.Controls"
        mc:Ignorable="d"
        Title="Design-time Data Sample" Height="450" Width="800">
    
    <!--
        This is a design-time data sample, a new feature available to WPF .NET Core and UWP developers 
        starting with Visual Studio 2019 16.7 Preview 3+.
    
        TIP: Any XAML view that implements design time data requires the following:
    
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            mc:Ignorable="d"
    -->
    
    <Window.Resources>
        <Style TargetType="WrapPanel">
            <Setter Property="Background" Value="#FFE5E5E5" />
            <Setter Property="Orientation" Value="Horizontal" />
        </Style>

        <!-- ListView Templates and Helpers -->
        <DataTemplate x:Key="ListViewDefaultDataTemplate">
            <TextBlock Text="{Binding Path=.}" />
        </DataTemplate>
        
        <DataTemplate x:Key="ListViewBoldDataTemplate">
            <TextBlock Text="{Binding Path=.}" FontWeight="Bold" />
        </DataTemplate>
        
        <helper:ListViewdtSelector x:Key="ListViewDataTemplateSelector" />
        
        <!-- DataGrid -->
        <!--Create list of enumeration values-->
        <ObjectDataProvider x:Key="myEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="models:OrderStatus"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <DockPanel>
        <StatusBar Grid.Row="1" Height="25" DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock d:Text="Data Connection Failed" Margin="5 0 0 0" />

            </StatusBarItem>
        </StatusBar>
        
        <!-- Show GridLines only in design-time -->
        <Grid d:ShowGridLines="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <TabControl Grid.Row="0" Grid.Column="0">
                <TabItem Header="Text + Input">
                    <WrapPanel>
                        <Label Content="Test" Width="100" Height="100" />               
                        <TextBlock Text="{Binding Path=TextBlockText}" Width="100" Height="25" Margin="10"
                                 d:Text="Text Block Here" />

                        <TextBox Text="{Binding Path=TextBoxText}" Width="150" Height="25" Margin="10"
                             d:Text="Textbox Design Time" />

                        <!-- Testing out what a different character would look like for fun, but don't want it in the real app -->
                        <PasswordBox PasswordChar="*" Width="100" Height="25" Margin="10"
                                 d:PasswordChar="!" d:Password="Test" d:Background="red" />

                        <!-- In the real world this textbox would be used programmatically -->
                        <RichTextBox Width="150" Height="150" Margin="10">
                            <!-- This doesn't always work in 16.7 Preview 3, should be fixedin Preview 4) -->
                            <d:RichTextBox.Document>
                                <d:FlowDocument>
                                    <d:Paragraph>This is an example of a flow document paragaph
                                        <d:Bold>DON'T MISS THIS</d:Bold>
                                    </d:Paragraph>
                                    <d:Paragraph Foreground="Red">Red Text</d:Paragraph>
                                </d:FlowDocument>
                            </d:RichTextBox.Document>
                        </RichTextBox>
                    </WrapPanel>
                </TabItem>

                <TabItem Header="Lists">
                    <WrapPanel>
                        <ListView Width="200" Height="75" Margin="10" ItemTemplateSelector="{StaticResource ListViewDataTemplateSelector}">
                            <d:ListView.ItemsSource>
                                <x:Array Type="sys:String">
                                    <sys:String>Donovan</sys:String>
                                    <sys:String>Nicole</sys:String>
                                    <sys:String>Amanda</sys:String>
                                    <sys:String>Olia</sys:String>
                                </x:Array>
                            </d:ListView.ItemsSource>
                        </ListView>

                        <ListBox Width="200" Height="75" Margin="10">
                            <d:ListBox.ItemsSource>
                                <x:Array Type="sys:String">
                                    <sys:String>Scott</sys:String>
                                    <sys:String>Lesser Scott</sys:String>
                                    <sys:String>Terry</sys:String>
                                </x:Array>
                            </d:ListBox.ItemsSource>
                        </ListBox>

                        <TreeView Width="200" Height="75" Margin="10">
                            <d:TreeView.ItemsSource>
                                <x:Array Type="sys:String">
                                    <sys:String>Mary</sys:String>
                                    <sys:String>Immo</sys:String>
                                    <sys:String>Mark</sys:String>
                                </x:Array>
                            </d:TreeView.ItemsSource>
                        </TreeView>

                        <!-- Entity Class example -->
                        <DataGrid Width="450" Height="200" Margin="10" Name="DG1" ItemsSource="{Binding}" AutoGenerateColumns="False" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="First Name"  Binding="{Binding FirstName}"/>
                                <DataGridTextColumn Header="Last Name" Binding="{Binding LastName}" />
                                <DataGridHyperlinkColumn Header="Email" Binding="{Binding Email}" />
                                <DataGridCheckBoxColumn Header="Member?" Binding="{Binding IsMember}" />
                                <DataGridComboBoxColumn Header="Order Status" SelectedItemBinding="{Binding Status}" ItemsSource="{Binding Source={StaticResource myEnum}}" />
                            </DataGrid.Columns>
                            <d:DataGrid.ItemsSource>
                                <x:Array Type="{x:Type models:Employee}">
                                    <models:Employee FirstName="Dmitry" LastName="Lyalin" Email="dmitry@youknowwhere" IsMember="1" Status="Processing" />
                                    <models:Employee FirstName="Steve" LastName="Lyalin" Email="dmitry@youknowwhere" IsMember="1" Status="Processing" />
                                    <models:Employee FirstName="Dmitry" LastName="Lyalin" Email="dmitry@youknowwhere" IsMember="1" Status="Processing" />
                                </x:Array>
                            </d:DataGrid.ItemsSource>
                        </DataGrid>
                    </WrapPanel>
                </TabItem>

                <TabItem Header="Buttons">
                    <WrapPanel>
                        <Button Content="{Binding Path=ButtonContent}" d:Content="Design Time Button" Width="125" Height="25" Margin="10" />
                        <Button Content="{Binding Path=ButtonContent}" d:Content="Design Time Disabled" d:IsEnabled="false" Width="125" Height="25" Margin="10" />

                        <CheckBox Content="{Binding Path=CheckBoxContent}" IsChecked="{Binding Path=CheckedBoxState}" Width="100" Margin="10"
                              d:Content="Is Checked" d:IsChecked="True"  />

                        <RadioButton Content="{Binding Path=RadioButtonContent}" d:Content="Design Time Button" Width="125" Height="25" Margin="10" />

                        <Slider Minimum="0" Maximum="100" d:Value="50" Width="100" Height="25" Margin="10" />

                        <ComboBox Width="150" Margin="10">
                            <ComboBoxItem>ComboBox Item #1</ComboBoxItem>
                            <ComboBoxItem IsSelected="True">ComboBox Item #2</ComboBoxItem>
                            <ComboBoxItem d:IsSelected="True">ComboBox Item #3</ComboBoxItem>
                        </ComboBox>
                    </WrapPanel>
                </TabItem>

                <TabItem Header="Images">
                    <WrapPanel>
                        <!-- This doesn't always work in 16.7 Preview 3 (build errors, but renders in designer), should be fixedin Preview 4) -->
                        <Image Stretch="Uniform" d:Source="/Resources/Design-time/HEADER-Surface-Spring-2020.jpg" Width="500" Margin="10" />
                    </WrapPanel>
                </TabItem>

                <TabItem Header="Other">
                    <WrapPanel>
                        <Calendar Margin="10" d:DisplayDate="07/25/2020" d:SelectedDate="07/25/2020" />

                        <DatePicker Margin="10" Height="75" d:SelectedDate="05/05/2020" />

                        <ProgressBar Margin="10" Width="150" Height="25" Minimum="0" Maximum="200" d:Value="180"  />

                        <!-- Note: A bug exists in 16.7 that prevent the control's design-time data to render on the page that is hosting it (most of the time).We will try to resolve this in 16.8, but might take some time -->
                        <ctrl:ExampleUserControl Width="250" Height="100" Margin="10" />
                    </WrapPanel>
                </TabItem>
            </TabControl>

            <!-- Empty StackPanel in its own row just to show the d:GridLines better -->
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical" Width="100" Background="Gray" />
        </Grid>
    </DockPanel>
</Window>
